{"ast":null,"code":"import { onMounted } from \"vue\";\nexport default {\n  __name: '3Dtiles',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    onMounted(() => {\n      const viewer = new Cesium.Viewer(\"cesiumContainer\", {\n        homeButton: false,\n        animation: false,\n        navigationHelpButton: false,\n        baseLayerPicker: false,\n        timeline: false,\n        geocoder: false,\n        // sceneModePicker: false,\n        fullscreenButton: false\n        // vrButton: true,\n      });\n      //显示帧率\n      viewer.scene.debugShowFramesPerSecond = true;\n      //加载3d tiles\n      var tileset = new Cesium.Cesium3DTileset({\n        url: \"./tileData/Scene/Production_5.json\",\n        //数据路径\n        maximumScreenSpaceError: 2,\n        //最大的屏幕空间误差\n        maximumNumberOfLoadedTiles: 1000 //最大加载瓦片个数\n        // modelMatrix: m, //形状矩阵\n      });\n      //创建平移矩阵方法一\n      // m = Cesium.Matrix4.fromArray([\n      // 1.0, 0.0, 0.0, 0.0,\n      // 0.0, 1.0, 0.0, 0.0,\n      // 0.0, 0.0, 1.0, 0.0,\n      // x, y, z, 1.0\n      // ]);\n\n      //创建平移矩阵方法二\n      // var translation = Cesium.Cartesian3.fromArray([0, 0, 0]);\n      // const m = Cesium.Matrix4.fromTranslation(translation);\n\n      // //生效\n      // tileset._modelMatrix = m;\n\n      tileset.readyPromise.then(function (tileset) {\n        viewer.scene.primitives.add(tileset);\n\n        //移动到表面\n        const height = Number(i);\n        const cartographic = Cesium.Cartographic.fromCartesian(tileset.boundingSphere.center);\n        const surface = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, 0.0);\n        const offset = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, height);\n        const translation = Cesium.Cartesian3.subtract(offset, surface, new Cesium.Cartesian3());\n        tileset.modelMatrix = Cesium.Matrix4.fromTranslation(translation);\n        viewer.zoomTo(tileset\n        // new Cesium.HeadingPitchRange(\n        //   0.0,\n        //   -0.5,\n        //   tileset.boundingSphere.radius * 2.0\n        // )\n        );\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n    const __returned__ = {\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAWA,SAASA,SAAS,QAAQ,KAAK;;;;;;;IAE/BA,SAAS,CAAC,MAAM;MACd,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAAC,iBAAiB,EAAE;QAClDC,UAAU,EAAE,KAAK;QACjBC,SAAS,EAAE,KAAK;QAChBC,oBAAoB,EAAE,KAAK;QAC3BC,eAAe,EAAE,KAAK;QACtBC,QAAQ,EAAE,KAAK;QACfC,QAAQ,EAAE,KAAK;QACf;QACAC,gBAAgB,EAAE;QAClB;MACF,CAAC,CAAC;MACF;MACAT,MAAM,CAACU,KAAK,CAACC,wBAAwB,GAAG,IAAI;MAC5C;MACA,IAAIC,OAAO,GAAG,IAAIX,MAAM,CAACY,eAAe,CAAC;QACvCC,GAAG,EAAE,oCAAoC;QAAE;QAC3CC,uBAAuB,EAAE,CAAC;QAAE;QAC5BC,0BAA0B,EAAE,IAAI,CAAE;QAClC;MACF,CAAC,CAAC;MACF;MACA;MACA;MACA;MACA;MACA;MACA;;MAEE;MACA;MACA;;MAEA;MACA;;MAEFJ,OAAO,CAACK,YAAY,CACjBC,IAAI,CAAC,UAAUN,OAAO,EAAE;QACvBZ,MAAM,CAACU,KAAK,CAACS,UAAU,CAACC,GAAG,CAACR,OAAO,CAAC;;QAGpC;QACA,MAAMS,MAAM,GAAGC,MAAM,CAACC,CAAC,CAAC;QACxB,MAAMC,YAAY,GAAGvB,MAAM,CAACwB,YAAY,CAACC,aAAa,CACpDd,OAAO,CAACe,cAAc,CAACC,MAAM,CAC9B;QACD,MAAMC,OAAO,GAAG5B,MAAM,CAAC6B,UAAU,CAACC,WAAW,CAC3CP,YAAY,CAACQ,SAAS,EACtBR,YAAY,CAACS,QAAQ,EACrB,GAAG,CACJ;QACD,MAAMC,MAAM,GAAGjC,MAAM,CAAC6B,UAAU,CAACC,WAAW,CAC1CP,YAAY,CAACQ,SAAS,EACtBR,YAAY,CAACS,QAAQ,EACrBZ,MAAM,CACP;QACD,MAAMc,WAAW,GAAGlC,MAAM,CAAC6B,UAAU,CAACM,QAAQ,CAC5CF,MAAM,EACNL,OAAO,EACP,IAAI5B,MAAM,CAAC6B,UAAU,EAAE,CACxB;QACDlB,OAAO,CAACyB,WAAW,GAAGpC,MAAM,CAACqC,OAAO,CAACC,eAAe,CAACJ,WAAW,CAAC;QAEjEnC,MAAM,CAACwC,MAAM,CACX5B;QACA;QACA;QACA;QACA;QACA;QAAA,CACD;MACH,CAAC,CAAC,CACD6B,KAAK,CAAC,UAAUC,KAAK,EAAE;QACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN,CAAC,CAAC","names":["onMounted","viewer","Cesium","Viewer","homeButton","animation","navigationHelpButton","baseLayerPicker","timeline","geocoder","fullscreenButton","scene","debugShowFramesPerSecond","tileset","Cesium3DTileset","url","maximumScreenSpaceError","maximumNumberOfLoadedTiles","readyPromise","then","primitives","add","height","Number","i","cartographic","Cartographic","fromCartesian","boundingSphere","center","surface","Cartesian3","fromRadians","longitude","latitude","offset","translation","subtract","modelMatrix","Matrix4","fromTranslation","zoomTo","catch","error","console","log"],"sources":["C:/Users/DELL/Desktop/cx/LearnCesium/src/components/3Dtiles.vue"],"sourcesContent":["<template>\r\n    <div id=\"cesiumContainer\" class=\"fullSize\"></div>\r\n    <div id=\"loadingOverlay\"><h1>Loading...</h1></div>\r\n    <div id=\"toolbar\">\r\n      <div>Height</div>\r\n      <input type=\"range\" min=\"-100.0\" max=\"100.0\" step=\"1\" data-bind=\"value: height, valueUpdate: 'input'\">\r\n      <input type=\"text\" size=\"5\" data-bind=\"value: height\">\r\n    </div>\r\n    \r\n</template>\r\n<script setup>\r\nimport { onMounted } from \"vue\";\r\n\r\nonMounted(() => {\r\n  const viewer = new Cesium.Viewer(\"cesiumContainer\", {\r\n    homeButton: false,\r\n    animation: false,\r\n    navigationHelpButton: false,\r\n    baseLayerPicker: false,\r\n    timeline: false,\r\n    geocoder: false,\r\n    // sceneModePicker: false,\r\n    fullscreenButton: false,\r\n    // vrButton: true,\r\n  });\r\n  //显示帧率\r\n  viewer.scene.debugShowFramesPerSecond = true;\r\n  //加载3d tiles\r\n  var tileset = new Cesium.Cesium3DTileset({\r\n    url: \"./tileData/Scene/Production_5.json\", //数据路径\r\n    maximumScreenSpaceError: 2, //最大的屏幕空间误差\r\n    maximumNumberOfLoadedTiles: 1000, //最大加载瓦片个数\r\n    // modelMatrix: m, //形状矩阵\r\n  });\r\n  //创建平移矩阵方法一\r\n  // m = Cesium.Matrix4.fromArray([\r\n  // 1.0, 0.0, 0.0, 0.0,\r\n  // 0.0, 1.0, 0.0, 0.0,\r\n  // 0.0, 0.0, 1.0, 0.0,\r\n  // x, y, z, 1.0\r\n  // ]);\r\n\r\n    //创建平移矩阵方法二\r\n    // var translation = Cesium.Cartesian3.fromArray([0, 0, 0]);\r\n    // const m = Cesium.Matrix4.fromTranslation(translation);\r\n\r\n    // //生效\r\n    // tileset._modelMatrix = m;\r\n\r\n  tileset.readyPromise\r\n    .then(function (tileset) {\r\n      viewer.scene.primitives.add(tileset);\r\n     \r\n  \r\n      //移动到表面\r\n      const height = Number(i);\r\n      const cartographic = Cesium.Cartographic.fromCartesian(\r\n        tileset.boundingSphere.center\r\n      );\r\n      const surface = Cesium.Cartesian3.fromRadians(\r\n        cartographic.longitude,\r\n        cartographic.latitude,\r\n        0.0\r\n      );\r\n      const offset = Cesium.Cartesian3.fromRadians(\r\n        cartographic.longitude,\r\n        cartographic.latitude,\r\n        height\r\n      );\r\n      const translation = Cesium.Cartesian3.subtract(\r\n        offset,\r\n        surface,\r\n        new Cesium.Cartesian3()\r\n      );\r\n      tileset.modelMatrix = Cesium.Matrix4.fromTranslation(translation);\r\n   \r\n      viewer.zoomTo(\r\n        tileset,\r\n        // new Cesium.HeadingPitchRange(\r\n        //   0.0,\r\n        //   -0.5,\r\n        //   tileset.boundingSphere.radius * 2.0\r\n        // )\r\n      );\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n});\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n    \r\n      #toolbar {\r\n        background: rgba(42, 42, 42, 0.8);\r\n        padding: 4px;\r\n        border-radius: 4px;\r\n      }\r\n      #toolbar input {\r\n        vertical-align: middle;\r\n        padding-top: 2px;\r\n        padding-bottom: 2px;\r\n      }\r\n\r\n</style>\r\n   "]},"metadata":{},"sourceType":"module"}