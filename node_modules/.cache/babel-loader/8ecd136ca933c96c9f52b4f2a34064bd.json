{"ast":null,"code":"import { onMounted } from \"vue\";\nexport default {\n  __name: '3Dtiles',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    onMounted(() => {\n      const viewer = new Cesium.Viewer(\"cesiumContainer\", {\n        homeButton: false,\n        animation: false,\n        navigationHelpButton: false,\n        baseLayerPicker: false,\n        timeline: false,\n        geocoder: false,\n        sceneModePicker: false,\n        fullscreenButton: false\n        // vrButton: true,\n      });\n      //显示帧率\n      viewer.scene.debugShowFramesPerSecond = true;\n      //加载3d tiles\n      var tileset = viewer.scene.primitives.add(new Cesium.Cesium3DTileset({\n        url: \"./tileData/Scene/Production_4.json\",\n        //数据路径\n        maximumScreenSpaceError: 2,\n        //最大的屏幕空间误差\n        maximumNumberOfLoadedTiles: 1000 //最大加载瓦片个数\n        // modelMatrix: m, //形状矩阵\n      }));\n\n      //创建平移矩阵方法一\n      // m = Cesium.Matrix4.fromArray([\n      // 1.0, 0.0, 0.0, 0.0,\n      // 0.0, 1.0, 0.0, 0.0,\n      // 0.0, 0.0, 1.0, 0.0,\n      // x, y, z, 1.0\n      // ]);\n\n      //创建平移矩阵方法二\n      var translation = Cesium.Cartesian3.fromArray([0, 0, 10000]);\n      const m = Cesium.Matrix4.fromTranslation(translation);\n\n      //生效\n      tileset._modelMatrix = m;\n\n      //移动到形状\n      viewer.zoomTo(tileset);\n    });\n    const __returned__ = {\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAIA,SAASA,SAAS,QAAQ,KAAK;;;;;;;IAC/BA,SAAS,CAAC,MAAM;MACd,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAAC,iBAAiB,EAAE;QAClDC,UAAU,EAAE,KAAK;QACjBC,SAAS,EAAE,KAAK;QAChBC,oBAAoB,EAAE,KAAK;QAC3BC,eAAe,EAAE,KAAK;QACtBC,QAAQ,EAAE,KAAK;QACfC,QAAQ,EAAE,KAAK;QACfC,eAAe,EAAE,KAAK;QACtBC,gBAAgB,EAAE;QAClB;MACF,CAAC,CAAC;MACF;MACAV,MAAM,CAACW,KAAK,CAACC,wBAAwB,GAAG,IAAI;MAC5C;MACA,IAAIC,OAAO,GAAGb,MAAM,CAACW,KAAK,CAACG,UAAU,CAACC,GAAG,CACvC,IAAId,MAAM,CAACe,eAAe,CAAC;QACzBC,GAAG,EAAE,oCAAoC;QAAE;QAC3CC,uBAAuB,EAAE,CAAC;QAAE;QAC5BC,0BAA0B,EAAE,IAAI,CAAE;QAClC;MACF,CAAC,CAAC,CACH;;MAED;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA,IAAIC,WAAW,GAAGnB,MAAM,CAACoB,UAAU,CAACC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;MAC5D,MAAMC,CAAC,GAAGtB,MAAM,CAACuB,OAAO,CAACC,eAAe,CAACL,WAAW,CAAC;;MAErD;MACAP,OAAO,CAACa,YAAY,GAAGH,CAAC;;MAExB;MACAvB,MAAM,CAAC2B,MAAM,CAACd,OAAO,CAAC;IACxB,CAAC,CAAC","names":["onMounted","viewer","Cesium","Viewer","homeButton","animation","navigationHelpButton","baseLayerPicker","timeline","geocoder","sceneModePicker","fullscreenButton","scene","debugShowFramesPerSecond","tileset","primitives","add","Cesium3DTileset","url","maximumScreenSpaceError","maximumNumberOfLoadedTiles","translation","Cartesian3","fromArray","m","Matrix4","fromTranslation","_modelMatrix","zoomTo"],"sources":["/opt/lampp/htdocs/LearnCesium/project1/src/components/3Dtiles.vue"],"sourcesContent":["<template>\n  <div id=\"cesiumContainer\"></div>\n</template>\n<script setup>\nimport { onMounted } from \"vue\";\nonMounted(() => {\n  const viewer = new Cesium.Viewer(\"cesiumContainer\", {\n    homeButton: false,\n    animation: false,\n    navigationHelpButton: false,\n    baseLayerPicker: false,\n    timeline: false,\n    geocoder: false,\n    sceneModePicker: false,\n    fullscreenButton: false,\n    // vrButton: true,\n  });\n  //显示帧率\n  viewer.scene.debugShowFramesPerSecond = true;\n  //加载3d tiles\n  var tileset = viewer.scene.primitives.add(\n    new Cesium.Cesium3DTileset({\n      url: \"./tileData/Scene/Production_4.json\", //数据路径\n      maximumScreenSpaceError: 2, //最大的屏幕空间误差\n      maximumNumberOfLoadedTiles: 1000, //最大加载瓦片个数\n      // modelMatrix: m, //形状矩阵\n    })\n  );\n\n  //创建平移矩阵方法一\n  // m = Cesium.Matrix4.fromArray([\n  // 1.0, 0.0, 0.0, 0.0,\n  // 0.0, 1.0, 0.0, 0.0,\n  // 0.0, 0.0, 1.0, 0.0,\n  // x, y, z, 1.0\n  // ]);\n\n  //创建平移矩阵方法二\n  var translation = Cesium.Cartesian3.fromArray([0, 0, 10000]);\n  const m = Cesium.Matrix4.fromTranslation(translation);\n\n  //生效\n  tileset._modelMatrix = m;\n\n  //移动到形状\n  viewer.zoomTo(tileset);\n});\n</script>\n"]},"metadata":{},"sourceType":"module"}